// <auto-generated />
using System;
using Foodbook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Foodbook.Data.Migrations
{
    [DbContext(typeof(FoodbookDbContext))]
    [Migration("20251005102426_AddLogEntryTable")]
    partial class AddLogEntryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Foodbook.Data.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tomato",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Onion",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Garlic",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Carrot",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Potato",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bell Pepper",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Spinach",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Broccoli",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mushroom",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cucumber",
                            Quantity = 5m,
                            Unit = "piece",
                            UserId = 1
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Chicken Breast",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Beef",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Salmon",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tofu",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Eggs",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pork",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Shrimp",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Turkey",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Lamb",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Fish",
                            Quantity = 500m,
                            Unit = "gram",
                            UserId = 2
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rice",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Pasta",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Bread",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Quinoa",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Oats",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Barley",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Couscous",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Noodles",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Tortilla",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Crackers",
                            Quantity = 2m,
                            Unit = "cup",
                            UserId = 3
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Milk",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cheese",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Yogurt",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Butter",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cream",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Sour Cream",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cottage Cheese",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Mozzarella",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Parmesan",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Ricotta",
                            Quantity = 1m,
                            Unit = "cup",
                            UserId = 4
                        },
                        new
                        {
                            Id = 41,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Salt",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 42,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Black Pepper",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 43,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Garlic Powder",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 44,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Oregano",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 45,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Basil",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 46,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Thyme",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 47,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Rosemary",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 48,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Paprika",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 49,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cumin",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        },
                        new
                        {
                            Id = 50,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Name = "Cinnamon",
                            Quantity = 5m,
                            Unit = "teaspoon",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("Foodbook.Data.Entities.LogEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Context")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<TimeSpan?>("Duration")
                        .HasColumnType("time");

                    b.Property<string>("ExceptionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LogType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Comment")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("UserId", "RecipeId")
                        .IsUnique();

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "Absolutely delicious! Will definitely make again.",
                            CreatedAt = new DateTime(2023, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 1,
                            Score = 5,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            Comment = "Great recipe, easy to follow instructions.",
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 1,
                            Score = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            Comment = "Perfect for a family dinner.",
                            CreatedAt = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 2,
                            Score = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Comment = "Amazing flavors, highly recommend!",
                            CreatedAt = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 2,
                            Score = 4,
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Comment = "Quick and easy, perfect for weeknights.",
                            CreatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 3,
                            Score = 5,
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            Comment = "Excellent dish, everyone loved it.",
                            CreatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 3,
                            Score = 4,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Comment = "Great taste, will cook this again.",
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 4,
                            Score = 5,
                            UserId = 3
                        },
                        new
                        {
                            Id = 8,
                            Comment = "Simple but very tasty recipe.",
                            CreatedAt = new DateTime(2023, 12, 14, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 4,
                            Score = 5,
                            UserId = 4
                        },
                        new
                        {
                            Id = 9,
                            Comment = "Perfect balance of flavors.",
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 5,
                            Score = 4,
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            Comment = "Great recipe for beginners.",
                            CreatedAt = new DateTime(2023, 12, 28, 0, 0, 0, 0, DateTimeKind.Utc),
                            RecipeId = 5,
                            Score = 5,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CookTime")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Servings")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CookTime = 25,
                            CreatedAt = new DateTime(2023, 12, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Creamy Italian pasta with eggs and cheese",
                            Difficulty = "Medium",
                            ImageUrl = "https://example.com/images/classic-spaghetti-carbonara.jpg",
                            Instructions = "1. Cook pasta according to package directions\n2. Whisk eggs with cheese in a bowl\n3. Cook pancetta until crispy\n4. Toss hot pasta with egg mixture\n5. Add pancetta and serve immediately",
                            Servings = 4,
                            Title = "Classic Spaghetti Carbonara",
                            UpdatedAt = new DateTime(2023, 12, 27, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CookTime = 20,
                            CreatedAt = new DateTime(2023, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Fresh salmon grilled with aromatic herbs",
                            Difficulty = "Easy",
                            ImageUrl = "https://example.com/images/grilled-salmon-with-herbs.jpg",
                            Instructions = "1. Season salmon with herbs and olive oil\n2. Preheat grill to medium-high\n3. Grill salmon 4-5 minutes per side\n4. Let rest before serving\n5. Garnish with fresh herbs",
                            Servings = 2,
                            Title = "Grilled Salmon with Herbs",
                            UpdatedAt = new DateTime(2023, 12, 29, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CookTime = 30,
                            CreatedAt = new DateTime(2023, 12, 22, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Healthy bowl with quinoa, vegetables, and tahini dressing",
                            Difficulty = "Easy",
                            ImageUrl = "https://example.com/images/vegetarian-buddha-bowl.jpg",
                            Instructions = "1. Cook quinoa according to package directions\n2. Roast vegetables in oven\n3. Prepare tahini dressing\n4. Assemble bowl with quinoa, vegetables\n5. Drizzle with dressing and serve",
                            Servings = 2,
                            Title = "Vegetarian Buddha Bowl",
                            UpdatedAt = new DateTime(2023, 12, 31, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            CookTime = 120,
                            CreatedAt = new DateTime(2023, 12, 7, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Elegant beef tenderloin wrapped in puff pastry",
                            Difficulty = "Hard",
                            ImageUrl = "https://example.com/images/beef-wellington.jpg",
                            Instructions = "1. Season and sear beef tenderloin\n2. Wrap in mushroom duxelles\n3. Wrap in puff pastry\n4. Bake at 400°F for 25-30 minutes\n5. Let rest before slicing",
                            Servings = 6,
                            Title = "Beef Wellington",
                            UpdatedAt = new DateTime(2023, 12, 24, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CookTime = 35,
                            CreatedAt = new DateTime(2023, 12, 20, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Spicy coconut curry with vegetables and rice",
                            Difficulty = "Medium",
                            ImageUrl = "https://example.com/images/thai-green-curry.jpg",
                            Instructions = "1. Heat coconut milk in large pot\n2. Add curry paste and stir\n3. Add vegetables and protein\n4. Simmer until cooked through\n5. Serve over rice with fresh herbs",
                            Servings = 4,
                            Title = "Thai Green Curry",
                            UpdatedAt = new DateTime(2023, 12, 30, 0, 0, 0, 0, DateTimeKind.Utc),
                            UserId = 4
                        });
                });

            modelBuilder.Entity("Foodbook.Data.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("RecipeId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 1,
                            Quantity = 2m,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 2,
                            Quantity = 3m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 3,
                            Quantity = 1m,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 1,
                            IngredientId = 4,
                            Quantity = 2m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 5,
                            Quantity = 300m,
                            Unit = "gram"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 6,
                            Quantity = 2m,
                            Unit = "teaspoon"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 7,
                            Quantity = 1m,
                            Unit = "teaspoon"
                        },
                        new
                        {
                            RecipeId = 2,
                            IngredientId = 8,
                            Quantity = 1m,
                            Unit = "teaspoon"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 9,
                            Quantity = 1m,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 10,
                            Quantity = 2m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 11,
                            Quantity = 1m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 3,
                            IngredientId = 12,
                            Quantity = 1m,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 13,
                            Quantity = 800m,
                            Unit = "gram"
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 14,
                            Quantity = 2m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 15,
                            Quantity = 1m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 4,
                            IngredientId = 16,
                            Quantity = 1m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 17,
                            Quantity = 1m,
                            Unit = "cup"
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 18,
                            Quantity = 2m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 19,
                            Quantity = 1m,
                            Unit = "piece"
                        },
                        new
                        {
                            RecipeId = 5,
                            IngredientId = 20,
                            Quantity = 1m,
                            Unit = "piece"
                        });
                });

            modelBuilder.Entity("Foodbook.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@foodbook.com",
                            IsAdmin = true,
                            PasswordHash = "$2a$11$rQZ8K9vQZ8K9vQZ8K9vQZ8O",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 12, 2, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "mario@foodbook.com",
                            IsAdmin = false,
                            PasswordHash = "$2a$11$rQZ8K9vQZ8K9vQZ8K9vQZ8O",
                            Username = "chef_mario"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 12, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "lisa@foodbook.com",
                            IsAdmin = false,
                            PasswordHash = "$2a$11$rQZ8K9vQZ8K9vQZ8K9vQZ8O",
                            Username = "home_cook_lisa"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 12, 25, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "john@foodbook.com",
                            IsAdmin = false,
                            PasswordHash = "$2a$11$rQZ8K9vQZ8K9vQZ8K9vQZ8O",
                            Username = "foodie_john"
                        });
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Ingredient", b =>
                {
                    b.HasOne("Foodbook.Data.Entities.User", "User")
                        .WithMany("Ingredients")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Rating", b =>
                {
                    b.HasOne("Foodbook.Data.Entities.Recipe", "Recipe")
                        .WithMany("Ratings")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Foodbook.Data.Entities.User", "User")
                        .WithMany("Ratings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Recipe", b =>
                {
                    b.HasOne("Foodbook.Data.Entities.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("Foodbook.Data.Entities.Ingredient", "Ingredient")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Foodbook.Data.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Ingredient", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.Recipe", b =>
                {
                    b.Navigation("Ratings");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Foodbook.Data.Entities.User", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Ratings");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
